package tree;import java.text.SimpleDateFormat;import java.util.Arrays;import java.util.Date;/** * @author dll * @date 20220416 */public class HeapSort {    public static void heapSort(int[] arr) {        int temp = 0;        System.out.println("堆排序ing");        //1 将整个序列调成大顶堆        for (int i = arr.length / 2 - 1; i >= 0; i--) {            //有arr.length / 2 -1 个非叶子节点, 从下到上,这里从i 最大的值开始            adjustHeap(arr, i, arr.length);        }        //2 将堆顶元素与末尾元素交换，将最大元素沉到数组末端，重新调整结构，使其满足堆定义,然后继续交换        for (int j = arr.length - 1; j > 0; j--) {            temp = arr[j];            arr[j] = arr[0];            arr[0] = temp;            adjustHeap(arr, 0, j);        }        //System.out.println(Arrays.toString(arr));    }    /**     * 将一个二叉树调整为大顶堆     *     * @param arr    带调整的数组     * @param i      非叶子节点的index     * @param length 表示对多少个元素进行调整，length在逐渐减少     */    public static void adjustHeap(int[] arr, int i, int length) {        int temp = arr[i];        for (int k = i * 2 + 1; k < length; k = k * 2 + 1) {            //指定非叶子节点的左节点            if (k + 1 < length && arr[k] < arr[k + 1]) {                //左子节点小于右子节点的值                k++;            }            if (arr[k] > temp) {                //此时k已经指向子节点最大的值                arr[i] = arr[k];                //i 指向k，继续循环比较                i = k;            } else {                break;            }        }        arr[i] = temp;    }    public static void main(String[] args) {        //将数组进行升序排序        //int[] arr = {100, 2000, 777, 444, -1, -99, 4, 6, 8, 5, 9};        int[] arr = new int[8000000];        for (int i = 0; i < arr.length; i++) {            arr[i] = (int) (Math.random() * arr.length);        }        Date date1 = new Date();        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss SSS");        String date1Str = simpleDateFormat.format((date1));        System.out.println("排序前时间" + date1Str);        heapSort(arr);        Date date2 = new Date();        String date2Str = simpleDateFormat.format(date2);        System.out.println("排序后时间" + date2Str);    }}